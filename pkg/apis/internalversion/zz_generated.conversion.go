//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2023 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package internalversion

import (
	unsafe "unsafe"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1alpha1 "sigs.k8s.io/kwok/pkg/apis/v1alpha1"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Component)(nil), (*v1alpha1.Component)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_Component_To_v1alpha1_Component(a.(*Component), b.(*v1alpha1.Component), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Component)(nil), (*Component)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Component_To_internalversion_Component(a.(*v1alpha1.Component), b.(*Component), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Env)(nil), (*v1alpha1.Env)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_Env_To_v1alpha1_Env(a.(*Env), b.(*v1alpha1.Env), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Env)(nil), (*Env)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Env_To_internalversion_Env(a.(*v1alpha1.Env), b.(*Env), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KwokConfiguration)(nil), (*v1alpha1.KwokConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_KwokConfiguration_To_v1alpha1_KwokConfiguration(a.(*KwokConfiguration), b.(*v1alpha1.KwokConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.KwokConfiguration)(nil), (*KwokConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KwokConfiguration_To_internalversion_KwokConfiguration(a.(*v1alpha1.KwokConfiguration), b.(*KwokConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KwokConfigurationOptions)(nil), (*v1alpha1.KwokConfigurationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions(a.(*KwokConfigurationOptions), b.(*v1alpha1.KwokConfigurationOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.KwokConfigurationOptions)(nil), (*KwokConfigurationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions(a.(*v1alpha1.KwokConfigurationOptions), b.(*KwokConfigurationOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KwokctlConfiguration)(nil), (*v1alpha1.KwokctlConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_KwokctlConfiguration_To_v1alpha1_KwokctlConfiguration(a.(*KwokctlConfiguration), b.(*v1alpha1.KwokctlConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.KwokctlConfiguration)(nil), (*KwokctlConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KwokctlConfiguration_To_internalversion_KwokctlConfiguration(a.(*v1alpha1.KwokctlConfiguration), b.(*KwokctlConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KwokctlConfigurationOptions)(nil), (*v1alpha1.KwokctlConfigurationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions(a.(*KwokctlConfigurationOptions), b.(*v1alpha1.KwokctlConfigurationOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Port)(nil), (*v1alpha1.Port)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_Port_To_v1alpha1_Port(a.(*Port), b.(*v1alpha1.Port), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Port)(nil), (*Port)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Port_To_internalversion_Port(a.(*v1alpha1.Port), b.(*Port), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Volume)(nil), (*v1alpha1.Volume)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_internalversion_Volume_To_v1alpha1_Volume(a.(*Volume), b.(*v1alpha1.Volume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1alpha1.Volume)(nil), (*Volume)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Volume_To_internalversion_Volume(a.(*v1alpha1.Volume), b.(*Volume), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1alpha1.KwokctlConfigurationOptions)(nil), (*KwokctlConfigurationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_KwokctlConfigurationOptions_To_internalversion_KwokctlConfigurationOptions(a.(*v1alpha1.KwokctlConfigurationOptions), b.(*KwokctlConfigurationOptions), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_internalversion_Component_To_v1alpha1_Component(in *Component, out *v1alpha1.Component, s conversion.Scope) error {
	out.Name = in.Name
	out.Links = *(*[]string)(unsafe.Pointer(&in.Links))
	out.Binary = in.Binary
	out.Image = in.Image
	out.Command = *(*[]string)(unsafe.Pointer(&in.Command))
	out.Args = *(*[]string)(unsafe.Pointer(&in.Args))
	out.WorkDir = in.WorkDir
	out.Ports = *(*[]v1alpha1.Port)(unsafe.Pointer(&in.Ports))
	out.Envs = *(*[]v1alpha1.Env)(unsafe.Pointer(&in.Envs))
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1alpha1.Volume, len(*in))
		for i := range *in {
			if err := Convert_internalversion_Volume_To_v1alpha1_Volume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	out.Version = in.Version
	return nil
}

// Convert_internalversion_Component_To_v1alpha1_Component is an autogenerated conversion function.
func Convert_internalversion_Component_To_v1alpha1_Component(in *Component, out *v1alpha1.Component, s conversion.Scope) error {
	return autoConvert_internalversion_Component_To_v1alpha1_Component(in, out, s)
}

func autoConvert_v1alpha1_Component_To_internalversion_Component(in *v1alpha1.Component, out *Component, s conversion.Scope) error {
	out.Name = in.Name
	out.Links = *(*[]string)(unsafe.Pointer(&in.Links))
	out.Binary = in.Binary
	out.Image = in.Image
	out.Command = *(*[]string)(unsafe.Pointer(&in.Command))
	out.Args = *(*[]string)(unsafe.Pointer(&in.Args))
	out.WorkDir = in.WorkDir
	out.Ports = *(*[]Port)(unsafe.Pointer(&in.Ports))
	out.Envs = *(*[]Env)(unsafe.Pointer(&in.Envs))
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]Volume, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Volume_To_internalversion_Volume(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Volumes = nil
	}
	out.Version = in.Version
	return nil
}

// Convert_v1alpha1_Component_To_internalversion_Component is an autogenerated conversion function.
func Convert_v1alpha1_Component_To_internalversion_Component(in *v1alpha1.Component, out *Component, s conversion.Scope) error {
	return autoConvert_v1alpha1_Component_To_internalversion_Component(in, out, s)
}

func autoConvert_internalversion_Env_To_v1alpha1_Env(in *Env, out *v1alpha1.Env, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_internalversion_Env_To_v1alpha1_Env is an autogenerated conversion function.
func Convert_internalversion_Env_To_v1alpha1_Env(in *Env, out *v1alpha1.Env, s conversion.Scope) error {
	return autoConvert_internalversion_Env_To_v1alpha1_Env(in, out, s)
}

func autoConvert_v1alpha1_Env_To_internalversion_Env(in *v1alpha1.Env, out *Env, s conversion.Scope) error {
	out.Name = in.Name
	out.Value = in.Value
	return nil
}

// Convert_v1alpha1_Env_To_internalversion_Env is an autogenerated conversion function.
func Convert_v1alpha1_Env_To_internalversion_Env(in *v1alpha1.Env, out *Env, s conversion.Scope) error {
	return autoConvert_v1alpha1_Env_To_internalversion_Env(in, out, s)
}

func autoConvert_internalversion_KwokConfiguration_To_v1alpha1_KwokConfiguration(in *KwokConfiguration, out *v1alpha1.KwokConfiguration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions(&in.Options, &out.Options, s); err != nil {
		return err
	}
	return nil
}

// Convert_internalversion_KwokConfiguration_To_v1alpha1_KwokConfiguration is an autogenerated conversion function.
func Convert_internalversion_KwokConfiguration_To_v1alpha1_KwokConfiguration(in *KwokConfiguration, out *v1alpha1.KwokConfiguration, s conversion.Scope) error {
	return autoConvert_internalversion_KwokConfiguration_To_v1alpha1_KwokConfiguration(in, out, s)
}

func autoConvert_v1alpha1_KwokConfiguration_To_internalversion_KwokConfiguration(in *v1alpha1.KwokConfiguration, out *KwokConfiguration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions(&in.Options, &out.Options, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_KwokConfiguration_To_internalversion_KwokConfiguration is an autogenerated conversion function.
func Convert_v1alpha1_KwokConfiguration_To_internalversion_KwokConfiguration(in *v1alpha1.KwokConfiguration, out *KwokConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha1_KwokConfiguration_To_internalversion_KwokConfiguration(in, out, s)
}

func autoConvert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions(in *KwokConfigurationOptions, out *v1alpha1.KwokConfigurationOptions, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.NodeIP = in.NodeIP
	if err := v1.Convert_bool_To_Pointer_bool(&in.ManageAllNodes, &out.ManageAllNodes, s); err != nil {
		return err
	}
	out.ManageNodesWithAnnotationSelector = in.ManageNodesWithAnnotationSelector
	out.ManageNodesWithLabelSelector = in.ManageNodesWithLabelSelector
	out.DisregardStatusWithAnnotationSelector = in.DisregardStatusWithAnnotationSelector
	out.DisregardStatusWithLabelSelector = in.DisregardStatusWithLabelSelector
	out.ServerAddress = in.ServerAddress
	if err := v1.Convert_bool_To_Pointer_bool(&in.EnableCNI, &out.EnableCNI, s); err != nil {
		return err
	}
	return nil
}

// Convert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions is an autogenerated conversion function.
func Convert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions(in *KwokConfigurationOptions, out *v1alpha1.KwokConfigurationOptions, s conversion.Scope) error {
	return autoConvert_internalversion_KwokConfigurationOptions_To_v1alpha1_KwokConfigurationOptions(in, out, s)
}

func autoConvert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions(in *v1alpha1.KwokConfigurationOptions, out *KwokConfigurationOptions, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.NodeIP = in.NodeIP
	if err := v1.Convert_Pointer_bool_To_bool(&in.ManageAllNodes, &out.ManageAllNodes, s); err != nil {
		return err
	}
	out.ManageNodesWithAnnotationSelector = in.ManageNodesWithAnnotationSelector
	out.ManageNodesWithLabelSelector = in.ManageNodesWithLabelSelector
	out.DisregardStatusWithAnnotationSelector = in.DisregardStatusWithAnnotationSelector
	out.DisregardStatusWithLabelSelector = in.DisregardStatusWithLabelSelector
	out.ServerAddress = in.ServerAddress
	if err := v1.Convert_Pointer_bool_To_bool(&in.EnableCNI, &out.EnableCNI, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions is an autogenerated conversion function.
func Convert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions(in *v1alpha1.KwokConfigurationOptions, out *KwokConfigurationOptions, s conversion.Scope) error {
	return autoConvert_v1alpha1_KwokConfigurationOptions_To_internalversion_KwokConfigurationOptions(in, out, s)
}

func autoConvert_internalversion_KwokctlConfiguration_To_v1alpha1_KwokctlConfiguration(in *KwokctlConfiguration, out *v1alpha1.KwokctlConfiguration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions(&in.Options, &out.Options, s); err != nil {
		return err
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]v1alpha1.Component, len(*in))
		for i := range *in {
			if err := Convert_internalversion_Component_To_v1alpha1_Component(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Components = nil
	}
	return nil
}

// Convert_internalversion_KwokctlConfiguration_To_v1alpha1_KwokctlConfiguration is an autogenerated conversion function.
func Convert_internalversion_KwokctlConfiguration_To_v1alpha1_KwokctlConfiguration(in *KwokctlConfiguration, out *v1alpha1.KwokctlConfiguration, s conversion.Scope) error {
	return autoConvert_internalversion_KwokctlConfiguration_To_v1alpha1_KwokctlConfiguration(in, out, s)
}

func autoConvert_v1alpha1_KwokctlConfiguration_To_internalversion_KwokctlConfiguration(in *v1alpha1.KwokctlConfiguration, out *KwokctlConfiguration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_KwokctlConfigurationOptions_To_internalversion_KwokctlConfigurationOptions(&in.Options, &out.Options, s); err != nil {
		return err
	}
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]Component, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Component_To_internalversion_Component(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Components = nil
	}
	return nil
}

// Convert_v1alpha1_KwokctlConfiguration_To_internalversion_KwokctlConfiguration is an autogenerated conversion function.
func Convert_v1alpha1_KwokctlConfiguration_To_internalversion_KwokctlConfiguration(in *v1alpha1.KwokctlConfiguration, out *KwokctlConfiguration, s conversion.Scope) error {
	return autoConvert_v1alpha1_KwokctlConfiguration_To_internalversion_KwokctlConfiguration(in, out, s)
}

func autoConvert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions(in *KwokctlConfigurationOptions, out *v1alpha1.KwokctlConfigurationOptions, s conversion.Scope) error {
	out.KubeApiserverPort = in.KubeApiserverPort
	out.Runtime = in.Runtime
	out.PrometheusPort = in.PrometheusPort
	out.KwokVersion = in.KwokVersion
	out.KubeVersion = in.KubeVersion
	out.EtcdVersion = in.EtcdVersion
	out.PrometheusVersion = in.PrometheusVersion
	out.DockerComposeVersion = in.DockerComposeVersion
	out.KindVersion = in.KindVersion
	if err := v1.Convert_bool_To_Pointer_bool(&in.SecurePort, &out.SecurePort, s); err != nil {
		return err
	}
	if err := v1.Convert_bool_To_Pointer_bool(&in.QuietPull, &out.QuietPull, s); err != nil {
		return err
	}
	if err := v1.Convert_bool_To_Pointer_bool(&in.DisableKubeScheduler, &out.DisableKubeScheduler, s); err != nil {
		return err
	}
	if err := v1.Convert_bool_To_Pointer_bool(&in.DisableKubeControllerManager, &out.DisableKubeControllerManager, s); err != nil {
		return err
	}
	out.EtcdImage = in.EtcdImage
	out.KubeApiserverImage = in.KubeApiserverImage
	out.KubeControllerManagerImage = in.KubeControllerManagerImage
	out.KubeSchedulerImage = in.KubeSchedulerImage
	out.KwokControllerImage = in.KwokControllerImage
	out.PrometheusImage = in.PrometheusImage
	out.KindNodeImage = in.KindNodeImage
	out.BinSuffix = in.BinSuffix
	out.KubeApiserverBinary = in.KubeApiserverBinary
	out.KubeControllerManagerBinary = in.KubeControllerManagerBinary
	out.KubeSchedulerBinary = in.KubeSchedulerBinary
	out.KubectlBinary = in.KubectlBinary
	out.EtcdBinary = in.EtcdBinary
	out.EtcdBinaryTar = in.EtcdBinaryTar
	out.KwokControllerBinary = in.KwokControllerBinary
	out.PrometheusBinary = in.PrometheusBinary
	out.PrometheusBinaryTar = in.PrometheusBinaryTar
	out.DockerComposeBinary = in.DockerComposeBinary
	out.KindBinary = in.KindBinary
	out.Mode = in.Mode
	out.KubeFeatureGates = in.KubeFeatureGates
	out.KubeRuntimeConfig = in.KubeRuntimeConfig
	out.KubeAuditPolicy = in.KubeAuditPolicy
	if err := v1.Convert_bool_To_Pointer_bool(&in.KubeAuthorization, &out.KubeAuthorization, s); err != nil {
		return err
	}
	out.EtcdPeerPort = in.EtcdPeerPort
	out.EtcdPort = in.EtcdPort
	out.KubeControllerManagerPort = in.KubeControllerManagerPort
	out.KubeSchedulerPort = in.KubeSchedulerPort
	out.KwokControllerPort = in.KwokControllerPort
	out.CacheDir = in.CacheDir
	return nil
}

// Convert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions is an autogenerated conversion function.
func Convert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions(in *KwokctlConfigurationOptions, out *v1alpha1.KwokctlConfigurationOptions, s conversion.Scope) error {
	return autoConvert_internalversion_KwokctlConfigurationOptions_To_v1alpha1_KwokctlConfigurationOptions(in, out, s)
}

func autoConvert_v1alpha1_KwokctlConfigurationOptions_To_internalversion_KwokctlConfigurationOptions(in *v1alpha1.KwokctlConfigurationOptions, out *KwokctlConfigurationOptions, s conversion.Scope) error {
	out.KubeApiserverPort = in.KubeApiserverPort
	out.Runtime = in.Runtime
	out.PrometheusPort = in.PrometheusPort
	out.KwokVersion = in.KwokVersion
	out.KubeVersion = in.KubeVersion
	out.EtcdVersion = in.EtcdVersion
	out.PrometheusVersion = in.PrometheusVersion
	out.DockerComposeVersion = in.DockerComposeVersion
	out.KindVersion = in.KindVersion
	if err := v1.Convert_Pointer_bool_To_bool(&in.SecurePort, &out.SecurePort, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_bool_To_bool(&in.QuietPull, &out.QuietPull, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_bool_To_bool(&in.DisableKubeScheduler, &out.DisableKubeScheduler, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_bool_To_bool(&in.DisableKubeControllerManager, &out.DisableKubeControllerManager, s); err != nil {
		return err
	}
	// WARNING: in.KubeImagePrefix requires manual conversion: does not exist in peer-type
	// WARNING: in.EtcdImagePrefix requires manual conversion: does not exist in peer-type
	// WARNING: in.KwokImagePrefix requires manual conversion: does not exist in peer-type
	// WARNING: in.PrometheusImagePrefix requires manual conversion: does not exist in peer-type
	out.EtcdImage = in.EtcdImage
	out.KubeApiserverImage = in.KubeApiserverImage
	out.KubeControllerManagerImage = in.KubeControllerManagerImage
	out.KubeSchedulerImage = in.KubeSchedulerImage
	out.KwokControllerImage = in.KwokControllerImage
	out.PrometheusImage = in.PrometheusImage
	// WARNING: in.KindNodeImagePrefix requires manual conversion: does not exist in peer-type
	out.KindNodeImage = in.KindNodeImage
	out.BinSuffix = in.BinSuffix
	// WARNING: in.KubeBinaryPrefix requires manual conversion: does not exist in peer-type
	out.KubeApiserverBinary = in.KubeApiserverBinary
	out.KubeControllerManagerBinary = in.KubeControllerManagerBinary
	out.KubeSchedulerBinary = in.KubeSchedulerBinary
	out.KubectlBinary = in.KubectlBinary
	// WARNING: in.EtcdBinaryPrefix requires manual conversion: does not exist in peer-type
	out.EtcdBinary = in.EtcdBinary
	out.EtcdBinaryTar = in.EtcdBinaryTar
	// WARNING: in.KwokBinaryPrefix requires manual conversion: does not exist in peer-type
	out.KwokControllerBinary = in.KwokControllerBinary
	// WARNING: in.PrometheusBinaryPrefix requires manual conversion: does not exist in peer-type
	out.PrometheusBinary = in.PrometheusBinary
	out.PrometheusBinaryTar = in.PrometheusBinaryTar
	// WARNING: in.DockerComposeBinaryPrefix requires manual conversion: does not exist in peer-type
	out.DockerComposeBinary = in.DockerComposeBinary
	// WARNING: in.KindBinaryPrefix requires manual conversion: does not exist in peer-type
	out.KindBinary = in.KindBinary
	out.Mode = in.Mode
	out.KubeFeatureGates = in.KubeFeatureGates
	out.KubeRuntimeConfig = in.KubeRuntimeConfig
	out.KubeAuditPolicy = in.KubeAuditPolicy
	if err := v1.Convert_Pointer_bool_To_bool(&in.KubeAuthorization, &out.KubeAuthorization, s); err != nil {
		return err
	}
	out.EtcdPeerPort = in.EtcdPeerPort
	out.EtcdPort = in.EtcdPort
	out.KubeControllerManagerPort = in.KubeControllerManagerPort
	out.KubeSchedulerPort = in.KubeSchedulerPort
	out.KwokControllerPort = in.KwokControllerPort
	out.CacheDir = in.CacheDir
	return nil
}

func autoConvert_internalversion_Port_To_v1alpha1_Port(in *Port, out *v1alpha1.Port, s conversion.Scope) error {
	out.Name = in.Name
	out.Port = in.Port
	out.HostPort = in.HostPort
	out.Protocol = v1alpha1.Protocol(in.Protocol)
	return nil
}

// Convert_internalversion_Port_To_v1alpha1_Port is an autogenerated conversion function.
func Convert_internalversion_Port_To_v1alpha1_Port(in *Port, out *v1alpha1.Port, s conversion.Scope) error {
	return autoConvert_internalversion_Port_To_v1alpha1_Port(in, out, s)
}

func autoConvert_v1alpha1_Port_To_internalversion_Port(in *v1alpha1.Port, out *Port, s conversion.Scope) error {
	out.Name = in.Name
	out.Port = in.Port
	out.HostPort = in.HostPort
	out.Protocol = Protocol(in.Protocol)
	return nil
}

// Convert_v1alpha1_Port_To_internalversion_Port is an autogenerated conversion function.
func Convert_v1alpha1_Port_To_internalversion_Port(in *v1alpha1.Port, out *Port, s conversion.Scope) error {
	return autoConvert_v1alpha1_Port_To_internalversion_Port(in, out, s)
}

func autoConvert_internalversion_Volume_To_v1alpha1_Volume(in *Volume, out *v1alpha1.Volume, s conversion.Scope) error {
	out.Name = in.Name
	if err := v1.Convert_bool_To_Pointer_bool(&in.ReadOnly, &out.ReadOnly, s); err != nil {
		return err
	}
	out.HostPath = in.HostPath
	out.MountPath = in.MountPath
	return nil
}

// Convert_internalversion_Volume_To_v1alpha1_Volume is an autogenerated conversion function.
func Convert_internalversion_Volume_To_v1alpha1_Volume(in *Volume, out *v1alpha1.Volume, s conversion.Scope) error {
	return autoConvert_internalversion_Volume_To_v1alpha1_Volume(in, out, s)
}

func autoConvert_v1alpha1_Volume_To_internalversion_Volume(in *v1alpha1.Volume, out *Volume, s conversion.Scope) error {
	out.Name = in.Name
	if err := v1.Convert_Pointer_bool_To_bool(&in.ReadOnly, &out.ReadOnly, s); err != nil {
		return err
	}
	out.HostPath = in.HostPath
	out.MountPath = in.MountPath
	return nil
}

// Convert_v1alpha1_Volume_To_internalversion_Volume is an autogenerated conversion function.
func Convert_v1alpha1_Volume_To_internalversion_Volume(in *v1alpha1.Volume, out *Volume, s conversion.Scope) error {
	return autoConvert_v1alpha1_Volume_To_internalversion_Volume(in, out, s)
}
